{
  "openapi": "3.0.2",
  "info": {
    "title": "Studies Search api",
    "version": "1.0",
    "description": "Backend api for Studies Search application."
  },
  "servers": [
    {
      "url": "https://djalowiecki.toadres.pl/studies-search/api",
      "description": "Production server"
    },
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/faculities/": {
      "get": {
        "operationId": "listFaculities",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "faculity",
            "required": false,
            "in": "query",
            "description": "faculity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "school",
            "required": false,
            "in": "query",
            "description": "school",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "required": false,
            "in": "query",
            "description": "city",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "course",
            "required": false,
            "in": "query",
            "description": "course",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FaculitiesList"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Faculities"
        ]
      },
      "post": {
        "operationId": "createFaculities",
        "description": "",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaculitiesRetrieve"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FaculitiesRetrieve"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FaculitiesRetrieve"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaculitiesRetrieve"
                }
              }
            },
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Faculities"
        ]
      }
    },
    "/api/faculities/{id}/": {
      "get": {
        "operationId": "retrieveFaculities",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this faculities.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "faculity",
            "required": false,
            "in": "query",
            "description": "faculity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "school",
            "required": false,
            "in": "query",
            "description": "school",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "required": false,
            "in": "query",
            "description": "city",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "course",
            "required": false,
            "in": "query",
            "description": "course",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaculitiesRetrieve"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Faculities"
        ]
      },
      "put": {
        "operationId": "updateFaculities",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this faculities.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "faculity",
            "required": false,
            "in": "query",
            "description": "faculity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "school",
            "required": false,
            "in": "query",
            "description": "school",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "required": false,
            "in": "query",
            "description": "city",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "course",
            "required": false,
            "in": "query",
            "description": "course",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaculitiesRetrieve"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FaculitiesRetrieve"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FaculitiesRetrieve"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaculitiesRetrieve"
                }
              }
            },
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Faculities"
        ]
      },
      "patch": {
        "operationId": "partialUpdateFaculities",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this faculities.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "faculity",
            "required": false,
            "in": "query",
            "description": "faculity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "school",
            "required": false,
            "in": "query",
            "description": "school",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "required": false,
            "in": "query",
            "description": "city",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "course",
            "required": false,
            "in": "query",
            "description": "course",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaculitiesRetrieve"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FaculitiesRetrieve"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FaculitiesRetrieve"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaculitiesRetrieve"
                }
              }
            },
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Faculities"
        ]
      }
    },
    "/api/filters/": {
      "get": {
        "operationId": "listFilters",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Filters"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Filters"
        ]
      }
    },
    "/api/schools/": {
      "get": {
        "operationId": "listSchools",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name__contains",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Schools"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Schools"
        ]
      },
      "post": {
        "operationId": "createSchools",
        "description": "",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Schools"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Schools"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Schools"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schools"
                }
              }
            },
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Schools"
        ]
      }
    },
    "/api/cities/": {
      "get": {
        "operationId": "listCities",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name__contains",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cities"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Cites"
        ]
      },
      "post": {
        "operationId": "createCities",
        "description": "",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cities"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Cities"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Cities"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cities"
                }
              }
            },
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Cites"
        ]
      }
    },
    "/api/membership/": {
      "get": {
        "operationId": "listMemberships",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Membership"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Membership"
        ]
      }
    },
    "/api/courses/": {
      "get": {
        "operationId": "listCourses",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name__contains",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Courses"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Courses"
        ]
      },
      "post": {
        "operationId": "createCourses",
        "description": "",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Courses"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Courses"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Courses"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Courses"
                }
              }
            },
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Courses"
        ]
      }
    },
    "/api/users/": {
      "get": {
        "operationId": "listUsers",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExtendsUser"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Users"
        ]
      },
      "post": {
        "operationId": "createUser",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendsUserCreatePasswordRetype"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ExtendsUserCreatePasswordRetype"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ExtendsUserCreatePasswordRetype"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendsUserCreatePasswordRetype"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/me/": {
      "get": {
        "operationId": "getCurrentUser",
        "description": "",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendsCurrentUser"
                }
              }
            },
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Me"
        ]
      },
      "put": {
        "operationId": "updateCurrentUser",
        "description": "",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendsCurrentUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ExtendsCurrentUser"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ExtendsCurrentUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendsCurrentUser"
                }
              }
            },
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Me"
        ]
      },
      "patch": {
        "operationId": "partialUpdateCurrentUser",
        "description": "",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendsCurrentUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ExtendsCurrentUser"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ExtendsCurrentUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendsCurrentUser"
                }
              }
            },
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Me"
        ]
      },
      "delete": {
        "operationId": "deleteCurrentUser",
        "description": "",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Me"
        ]
      }
    },
    "/api/users/{id}/": {
      "get": {
        "operationId": "retrieveUser",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendsUser"
                }
              }
            },
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Users"
        ]
      },
      "put": {
        "operationId": "updateUser",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendsUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ExtendsUser"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ExtendsUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendsUser"
                }
              }
            },
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "partialUpdateUser",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendsUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ExtendsUser"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ExtendsUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendsUser"
                }
              }
            },
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "destroyUser",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/comments/": {
      "post": {
        "operationId": "createComments",
        "description": "",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comments"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Comments"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Comments"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comments"
                }
              }
            },
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Comments"
        ]
      }
    },
    "/api/users/activation/": {
      "post": {
        "operationId": "activationUser",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Activation"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Activation"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Activation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activation"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/resend_activation/": {
      "post": {
        "operationId": "resendActivationUser",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendEmailReset"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/reset_password/": {
      "post": {
        "operationId": "resetPasswordUser",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/reset_password_confirm/": {
      "post": {
        "operationId": "resetPasswordConfirmUser",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirm"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/reset_email/": {
      "post": {
        "operationId": "resetEmailUser",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailReset"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/reset_email_confirm/": {
      "post": {
        "operationId": "resetEmailConfirmUser",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsernameResetConfirm"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UsernameResetConfirm"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UsernameResetConfirm"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/set_password/": {
      "post": {
        "operationId": "setPasswordUser",
        "description": "",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPassword"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SetPassword"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SetPassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Me"
        ]
      }
    },
    "/api/users/set_email/": {
      "post": {
        "operationId": "setEmailUser",
        "description": "",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetUsername"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SetUsername"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SetUsername"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Me"
        ]
      }
    },
    "/api/token/login/": {
      "post": {
        "operationId": "createTokenCreate",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenCreate"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Token"
        ]
      }
    },
    "/api/token/logout/": {
      "post": {
        "operationId": "createTokenDestroy",
        "description": "Use this endpoint to logout user (remove user authentication token).",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "tags": [
          "Token"
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "token"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      }
    },
    "schemas": {
      "FaculitiesList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "description_preview": {
            "type": "string",
            "readOnly": true
          },
          "school": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "first_image": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "courses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "school",
          "city",
          "courses"
        ]
      },
      "FaculitiesRetrieve": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "maxLength": 500
          },
          "school": {
            "type": "string",
            "readOnly": true
          },
          "city": {
            "type": "string",
            "readOnly": true
          },
          "hyperlink": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "maxLength": 200,
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\.(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\s]*)?\\z"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "courses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "add_courses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "writeOnly": true,
            "default": []
          },
          "add_school": {
            "type": "string",
            "writeOnly": true,
            "maxLength": 100
          },
          "add_city": {
            "type": "string",
            "writeOnly": true,
            "description": "Required. 50 characters or fewer. Letters and spaces only.",
            "pattern": "^[a-zA-Z ]*$",
            "maxLength": 50
          },
          "uploaded_images": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "writeOnly": true,
            "default": [],
            "maxItems": 4
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "modificated_by": {
            "type": "object",
            "readOnly": true
          },
          "modification_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "name",
          "description",
          "add_school",
          "add_city"
        ]
      },
      "Filters": {
        "type": "object",
        "properties": {
          "schools": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "cities": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "courses": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "schools",
          "cities",
          "courses"
        ]
      },
      "Schools": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100
          }
        },
        "required": [
          "name"
        ]
      },
      "Cities": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Required. 50 characters or fewer. Letters and spaces only.",
            "pattern": "^[a-zA-Z ]*$",
            "maxLength": 50
          }
        },
        "required": [
          "name"
        ]
      },
      "Membership": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 30
          }
        },
        "required": [
          "name"
        ]
      },
      "Courses": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100
          }
        },
        "required": [
          "name"
        ]
      },
      "ExtendsUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+\\z",
            "maxLength": 150
          },
          "membership": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "username"
        ]
      },
      "ExtendsCurrentUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+\\z",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true
          },
          "membership": {
            "type": "string",
            "readOnly": true
          },
          "is_moderator": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "required": [
          "username"
        ]
      },
      "Comments": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "type": "string",
            "readOnly": true
          },
          "entry": {
            "type": "integer"
          },
          "content": {
            "type": "string",
            "maxLength": 250
          }
        },
        "required": [
          "entry",
          "content"
        ]
      },
      "ExtendsUserCreatePasswordRetype": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+\\z",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "membership": {
            "type": "integer"
          },
          "re_password": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "email",
          "password",
          "membership",
          "re_password"
        ]
      },
      "Activation": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "uid",
          "token"
        ]
      },
      "SendEmailReset": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "PasswordResetConfirm": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          }
        },
        "required": [
          "uid",
          "token",
          "new_password"
        ]
      },
      "UsernameResetConfirm": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "new_email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          }
        },
        "required": [
          "uid",
          "token",
          "new_email"
        ]
      },
      "SetPassword": {
        "type": "object",
        "properties": {
          "new_password": {
            "type": "string"
          },
          "current_password": {
            "type": "string"
          }
        },
        "required": [
          "new_password",
          "current_password"
        ]
      },
      "SetUsername": {
        "type": "object",
        "properties": {
          "current_password": {
            "type": "string"
          },
          "new_email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          }
        },
        "required": [
          "current_password",
          "new_email"
        ]
      },
      "TokenCreate": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "DeleteUser": {
        "type": "object",
        "properties": {
          "current_password": {
            "type": "string"
          }
        },
        "required": [
          "current_password"
        ]
      }
    }
  }
}